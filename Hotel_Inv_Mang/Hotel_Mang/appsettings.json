{
    /*
        MangoDb 
            UerName - sidraje_dev
            Pass - sidraje_dev8483@ but(@ => %40 use krna padta hai)
    */
    "MongoDB": {
        "ConnectionString": "mongodb+srv://sidraje_dev:sidraje_dev8483%40@cluster0.tyel4zy.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",

        "DatabaseName": "hotel_inventoryMang"
    },
    "JwtSettings": {
        "SecretKey": "YourSuperSecretKeyThatIsAtLeast32CharactersLong!",
        "Issuer": "HotelInventoryAPI",
        "Audience": "HotelInventoryClient"
    },

    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft.AspNetCore": "Warning"
        }
    },
    "AllowedHosts": "*"
}

//Run the following on the command line  -      'dotnet add package MongoDB.Driver'
//Add your connection string into your application code -
// Show Pass : 'mongodb+srv://sidraje_dev:sidraje_dev8483@@cluster0.tyel4zy.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'

/*
    full code sample

    
using MongoDB.Driver;
using MongoDB.Bson;

const string connectionUri = "mongodb+srv://sidraje_dev:sidraje_dev8483@@cluster0.tyel4zy.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0";

var settings = MongoClientSettings.FromConnectionString(connectionUri);

// Set the ServerApi field of the settings object to set the version of the Stable API on the client
settings.ServerApi = new ServerApi(ServerApiVersion.V1);

// Create a new client and connect to the server
var client = new MongoClient(settings);

// Send a ping to confirm a successful connection
try {
  var result = client.GetDatabase("admin").RunCommand<BsonDocument>(new BsonDocument("ping", 1));
  Console.WriteLine("Pinged your deployment. You successfully connected to MongoDB!");
} catch (Exception ex) {
  Console.WriteLine(ex);
}

*/
